#week3作业

#词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
Dict = {"经常":0.1,
        "经":0.05,
        "有":0.1,
        "常":0.001,
        "有意见":0.1,
        "歧":0.001,
        "意见":0.2,
        "分歧":0.2,
        "见":0.05,
        "意":0.05,
        "见分歧":0.05,
        "分":0.1}

#待切分文本
sentence = "经常有意见分歧"

# 实现全切分函数，输出根据字典能够切分出的所有的切分方式
# sentence 待切分的文本
# Dict 词典
# result 切分结果
# target 输出结果
def all_cut(sentence, Dict, result=[]):
    # 当文本为空时，返回当前切分结果
    if not sentence:
        return [result]

    target = []
    # 遍历词典，尝试匹配文本开头的词
    for i in Dict:
        # 存在匹配的词
        if sentence.startswith(i):
            # 当前词添加至切分结果
            new_result = result + [i]
            # print(new_result)
            # 递归切分剩余文本
            target.extend(all_cut(sentence[len(i):], Dict, new_result))

    return target


targets = all_cut(sentence, Dict)
#print(targets)
for result in targets:
    print(result)



#目标输出;顺序不重要
target = [
    ['经常', '有意见', '分歧'],
    ['经常', '有意见', '分', '歧'],
    ['经常', '有', '意见', '分歧'],
    ['经常', '有', '意见', '分', '歧'],
    ['经常', '有', '意', '见分歧'],
    ['经常', '有', '意', '见', '分歧'],
    ['经常', '有', '意', '见', '分', '歧'],
    ['经', '常', '有意见', '分歧'],
    ['经', '常', '有意见', '分', '歧'],
    ['经', '常', '有', '意见', '分歧'],
    ['经', '常', '有', '意见', '分', '歧'],
    ['经', '常', '有', '意', '见分歧'],
    ['经', '常', '有', '意', '见', '分歧'],
    ['经', '常', '有', '意', '见', '分', '歧']
]

